Rocket.Surgery.Nuke.ComputedGitVersionAttribute
Rocket.Surgery.Nuke.ComputedGitVersionAttribute.ComputedGitVersionAttribute() -> void
Rocket.Surgery.Nuke.DownloadFileAttribute
Rocket.Surgery.Nuke.DownloadFileAttribute.DownloadFileAttribute(string url, string filePath) -> void
Rocket.Surgery.Nuke.DownloadFileAttribute.OnAfterLogo(Nuke.Common.NukeBuild build, System.Collections.Generic.IReadOnlyCollection<Nuke.Common.Execution.ExecutableTarget> executableTargets, System.Collections.Generic.IReadOnlyCollection<Nuke.Common.Execution.ExecutableTarget> executionPlan) -> void
Rocket.Surgery.Nuke.DownloadFileAttribute.Type.get -> string
Rocket.Surgery.Nuke.DownloadFileAttribute.Type.set -> void
Rocket.Surgery.Nuke.EnsureGitHooksAttribute
Rocket.Surgery.Nuke.EnsureGitHooksAttribute.EnsureGitHooksAttribute(params Rocket.Surgery.Nuke.GitHook[] hookNames) -> void
Rocket.Surgery.Nuke.EnsureGitHooksAttribute.HookNames.get -> string[]
Rocket.Surgery.Nuke.EnsureGitHooksAttribute.OnBeforeLogo(Nuke.Common.NukeBuild build, System.Collections.Generic.IReadOnlyCollection<Nuke.Common.Execution.ExecutableTarget> executableTargets) -> void
Rocket.Surgery.Nuke.EnsurePackageSourceHasCredentialsAttribute
Rocket.Surgery.Nuke.EnsurePackageSourceHasCredentialsAttribute.EnsurePackageSourceHasCredentialsAttribute(string sourceName) -> void
Rocket.Surgery.Nuke.EnsurePackageSourceHasCredentialsAttribute.OnBeforeLogo(Nuke.Common.NukeBuild build, System.Collections.Generic.IReadOnlyCollection<Nuke.Common.Execution.ExecutableTarget> executableTargets) -> void
Rocket.Surgery.Nuke.EnsurePackageSourceHasCredentialsAttribute.SourceName.get -> string
Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.ApplypatchMsg = 0 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.CommitMsg = 1 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PostApplypatch = 2 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PostCheckout = 3 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PostCommit = 4 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PostMerge = 5 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PostReceive = 6 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PostRewrite = 7 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PostUpdate = 8 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PreApplypatch = 9 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PreAutoGc = 10 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PreCommit = 11 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PrePush = 13 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PreRebase = 14 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PreReceive = 15 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PrepareCommitMsg = 12 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.PushToCheckout = 16 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.SendemailValidate = 17 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.GitHook.Update = 18 -> Rocket.Surgery.Nuke.GitHook
Rocket.Surgery.Nuke.IRocketBoosterBuild
Rocket.Surgery.Nuke.IRocketBoosterBuild.ArtifactsDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.BuildVersion.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.IRocketBoosterBuild.Clean.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.IRocketBoosterBuild.Configuration.get -> Nuke.Common.Configuration
Rocket.Surgery.Nuke.IRocketBoosterBuild.CoverageDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.Force.get -> bool
Rocket.Surgery.Nuke.IRocketBoosterBuild.GenerateReadme.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.IRocketBoosterBuild.Generate_Code_Coverage_Reports.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.IRocketBoosterBuild.GitRepository.get -> Nuke.Common.Git.GitRepository
Rocket.Surgery.Nuke.IRocketBoosterBuild.GitVersion.get -> Nuke.Common.Tools.GitVersion.GitVersion
Rocket.Surgery.Nuke.IRocketBoosterBuild.LogsDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.NuGetPackageDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.OutputDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.PublishDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.Readme.get -> Rocket.Surgery.Nuke.Readme.ReadmeUpdater
Rocket.Surgery.Nuke.IRocketBoosterBuild.SampleDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.Solution.get -> Nuke.Common.ProjectModel.Solution
Rocket.Surgery.Nuke.IRocketBoosterBuild.SourceDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.SyncVersions.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.IRocketBoosterBuild.TemplatesDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.TestDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.TestResultsDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.IRocketBoosterBuild.TestsDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.LoggingExtensions
Rocket.Surgery.Nuke.MSBuildBinaryLogImports
Rocket.Surgery.Nuke.MSBuildBinaryLogImports.Embed = 3 -> Rocket.Surgery.Nuke.MSBuildBinaryLogImports
Rocket.Surgery.Nuke.MSBuildBinaryLogImports.None = 2 -> Rocket.Surgery.Nuke.MSBuildBinaryLogImports
Rocket.Surgery.Nuke.MSBuildBinaryLogImports.Unspecified = 0 -> Rocket.Surgery.Nuke.MSBuildBinaryLogImports
Rocket.Surgery.Nuke.MSBuildBinaryLogImports.ZipFile = 4 -> Rocket.Surgery.Nuke.MSBuildBinaryLogImports
Rocket.Surgery.Nuke.NuGetVerbosityMappingAttribute
Rocket.Surgery.Nuke.NuGetVerbosityMappingAttribute.NuGetVerbosityMappingAttribute() -> void
Rocket.Surgery.Nuke.PackageIconAttribute
Rocket.Surgery.Nuke.PackageIconAttribute.PackageIconAttribute(string url, string filePath = null) -> void
Rocket.Surgery.Nuke.Readme.Badges
Rocket.Surgery.Nuke.Readme.Badges.Add(Rocket.Surgery.Nuke.Readme.IBadgeSection section) -> Rocket.Surgery.Nuke.Readme.Badges
Rocket.Surgery.Nuke.Readme.Badges.Badges() -> void
Rocket.Surgery.Nuke.Readme.Badges.ConfigKey.get -> string
Rocket.Surgery.Nuke.Readme.Badges.Name.get -> string
Rocket.Surgery.Nuke.Readme.Badges.Process(System.Collections.Generic.IDictionary<string, object> config, Rocket.Surgery.Nuke.Readme.IMarkdownReferences references, Rocket.Surgery.Nuke.RocketBoosterBuild build) -> string
Rocket.Surgery.Nuke.Readme.Histories
Rocket.Surgery.Nuke.Readme.Histories.Add(Rocket.Surgery.Nuke.Readme.IHistorySection section) -> Rocket.Surgery.Nuke.Readme.Histories
Rocket.Surgery.Nuke.Readme.Histories.ConfigKey.get -> string
Rocket.Surgery.Nuke.Readme.Histories.Histories() -> void
Rocket.Surgery.Nuke.Readme.Histories.Name.get -> string
Rocket.Surgery.Nuke.Readme.Histories.Process(System.Collections.Generic.IDictionary<string, object> config, Rocket.Surgery.Nuke.Readme.IMarkdownReferences references, Rocket.Surgery.Nuke.RocketBoosterBuild build) -> string
Rocket.Surgery.Nuke.Readme.IBadgeSection
Rocket.Surgery.Nuke.Readme.IBadgeSection.ConfigKey.get -> string
Rocket.Surgery.Nuke.Readme.IBadgeSection.Name.get -> string
Rocket.Surgery.Nuke.Readme.IBadgeSection.Process(System.Collections.Generic.IDictionary<object, object> config, Rocket.Surgery.Nuke.Readme.IMarkdownReferences references, Rocket.Surgery.Nuke.RocketBoosterBuild build) -> string
Rocket.Surgery.Nuke.Readme.IHistorySection
Rocket.Surgery.Nuke.Readme.IHistorySection.ConfigKey.get -> string
Rocket.Surgery.Nuke.Readme.IHistorySection.Name.get -> string
Rocket.Surgery.Nuke.Readme.IHistorySection.Process(System.Collections.Generic.IDictionary<object, object> config, Rocket.Surgery.Nuke.Readme.IMarkdownReferences references, Rocket.Surgery.Nuke.RocketBoosterBuild build) -> (string badge, string history)
Rocket.Surgery.Nuke.Readme.IMarkdownReferences
Rocket.Surgery.Nuke.Readme.IMarkdownReferences.AddReference(string name, string value, string altText = null) -> string
Rocket.Surgery.Nuke.Readme.IReadmeSection
Rocket.Surgery.Nuke.Readme.IReadmeSection.ConfigKey.get -> string
Rocket.Surgery.Nuke.Readme.IReadmeSection.Name.get -> string
Rocket.Surgery.Nuke.Readme.IReadmeSection.Process(System.Collections.Generic.IDictionary<string, object> config, Rocket.Surgery.Nuke.Readme.IMarkdownReferences references, Rocket.Surgery.Nuke.RocketBoosterBuild build) -> string
Rocket.Surgery.Nuke.Readme.ReadmeUpdater
Rocket.Surgery.Nuke.Readme.ReadmeUpdater.Badges.get -> Rocket.Surgery.Nuke.Readme.Badges
Rocket.Surgery.Nuke.Readme.ReadmeUpdater.History.get -> Rocket.Surgery.Nuke.Readme.Histories
Rocket.Surgery.Nuke.Readme.ReadmeUpdater.History.set -> void
Rocket.Surgery.Nuke.Readme.ReadmeUpdater.Process(string content, Rocket.Surgery.Nuke.RocketBoosterBuild build) -> string
Rocket.Surgery.Nuke.Readme.ReadmeUpdater.ReadmeUpdater() -> void
Rocket.Surgery.Nuke.Readme.ReadmeUpdater.References.get -> Rocket.Surgery.Nuke.Readme.References
Rocket.Surgery.Nuke.Readme.ReadmeUpdater.Sections.get -> Rocket.Surgery.Nuke.Readme.Sections
Rocket.Surgery.Nuke.Readme.References
Rocket.Surgery.Nuke.Readme.References.AddReference(string name, string value, string altText = null) -> string
Rocket.Surgery.Nuke.Readme.References.ConfigKey.get -> string
Rocket.Surgery.Nuke.Readme.References.Name.get -> string
Rocket.Surgery.Nuke.Readme.References.Process(System.Collections.Generic.IDictionary<string, object> config, Rocket.Surgery.Nuke.Readme.IMarkdownReferences references, Rocket.Surgery.Nuke.RocketBoosterBuild build) -> string
Rocket.Surgery.Nuke.Readme.References.References() -> void
Rocket.Surgery.Nuke.Readme.Sections
Rocket.Surgery.Nuke.Readme.Sections.Add(Rocket.Surgery.Nuke.Readme.IReadmeSection section) -> Rocket.Surgery.Nuke.Readme.Sections
Rocket.Surgery.Nuke.Readme.Sections.Sections() -> void
Rocket.Surgery.Nuke.RocketBoosterBuild
Rocket.Surgery.Nuke.RocketBoosterBuild.ArtifactsDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.BuildVersion.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.RocketBoosterBuild.Clean.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.RocketBoosterBuild.Configuration.get -> Nuke.Common.Configuration
Rocket.Surgery.Nuke.RocketBoosterBuild.CoverageDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.Force.get -> bool
Rocket.Surgery.Nuke.RocketBoosterBuild.GenerateReadme.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.RocketBoosterBuild.Generate_Code_Coverage_Reports.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.RocketBoosterBuild.GitRepository.get -> Nuke.Common.Git.GitRepository
Rocket.Surgery.Nuke.RocketBoosterBuild.GitVersion.get -> Nuke.Common.Tools.GitVersion.GitVersion
Rocket.Surgery.Nuke.RocketBoosterBuild.Lint.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.RocketBoosterBuild.LintFiles.get -> string[]
Rocket.Surgery.Nuke.RocketBoosterBuild.LintFiles.set -> void
Rocket.Surgery.Nuke.RocketBoosterBuild.LintProfile.get -> string
Rocket.Surgery.Nuke.RocketBoosterBuild.LintProfile.set -> void
Rocket.Surgery.Nuke.RocketBoosterBuild.LogsDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.NuGetPackageDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.OutputDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.PublishDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.Readme.get -> Rocket.Surgery.Nuke.Readme.ReadmeUpdater
Rocket.Surgery.Nuke.RocketBoosterBuild.RocketBoosterBuild() -> void
Rocket.Surgery.Nuke.RocketBoosterBuild.SampleDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.Solution.get -> Nuke.Common.ProjectModel.Solution
Rocket.Surgery.Nuke.RocketBoosterBuild.SourceDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.SyncVersions.get -> Nuke.Common.Target
Rocket.Surgery.Nuke.RocketBoosterBuild.TemplatesDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.TestDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.TestResultsDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.RocketBoosterBuild.TestsDirectory.get -> Nuke.Common.IO.PathConstruction.AbsolutePath
Rocket.Surgery.Nuke.SolutionExtensions
Rocket.Surgery.Nuke.ToolSettingsExtensions
Temp.CleanupCode.CleanupCodeMSBuildToolset
Temp.CleanupCode.CleanupCodeMSBuildToolset.CleanupCodeMSBuildToolset() -> void
Temp.CleanupCode.CleanupCodeSettings
Temp.CleanupCode.CleanupCodeSettings.CleanupCodeSettings() -> void
Temp.CleanupCode.CleanupCodeSettingsExtensions
Temp.CleanupCode.CleanupCodeSettingsLayers
Temp.CleanupCode.CleanupCodeSettingsLayers.CleanupCodeSettingsLayers() -> void
Temp.CleanupCode.CleanupCodeTasks
override Rocket.Surgery.Nuke.ComputedGitVersionAttribute.GetValue(System.Reflection.MemberInfo member, object instance) -> object
override Temp.CleanupCode.CleanupCodeSettings.ConfigureArguments(Nuke.Common.Tooling.Arguments arguments) -> Nuke.Common.Tooling.Arguments
override Temp.CleanupCode.CleanupCodeSettings.CustomLogger.get -> System.Action<Nuke.Common.Tooling.OutputType, string>
override Temp.CleanupCode.CleanupCodeSettings.ToolPath.get -> string
static Rocket.Surgery.Nuke.ComputedGitVersionAttribute.HasGitVer() -> bool
static Rocket.Surgery.Nuke.LoggingExtensions.Debug(string info) -> void
static Rocket.Surgery.Nuke.LoggingExtensions.Debug(string info, params object[] args) -> void
static Rocket.Surgery.Nuke.LoggingExtensions.EnvironmentVariable(string key) -> string
static Rocket.Surgery.Nuke.LoggingExtensions.Error(string info) -> void
static Rocket.Surgery.Nuke.LoggingExtensions.Error(string info, params object[] args) -> void
static Rocket.Surgery.Nuke.LoggingExtensions.Information(string info) -> void
static Rocket.Surgery.Nuke.LoggingExtensions.Information(string info, params object[] args) -> void
static Rocket.Surgery.Nuke.LoggingExtensions.Log(string log) -> void
static Rocket.Surgery.Nuke.LoggingExtensions.Warning(string info) -> void
static Rocket.Surgery.Nuke.LoggingExtensions.Warning(string info, params object[] args) -> void
static Rocket.Surgery.Nuke.SolutionExtensions.GetTestProjects(this Nuke.Common.ProjectModel.Solution solution, string testProjectNameSchema = "Tests") -> System.Collections.Generic.IEnumerable<Nuke.Common.ProjectModel.Project>
static Rocket.Surgery.Nuke.SolutionExtensions.WherePackable(this Nuke.Common.ProjectModel.Solution solution) -> System.Collections.Generic.IEnumerable<Nuke.Common.ProjectModel.Project>
static Rocket.Surgery.Nuke.ToolSettingsExtensions.SetBinaryLogger<T>(this T settings, Nuke.Common.IO.PathConstruction.AbsolutePath path) -> T
static Rocket.Surgery.Nuke.ToolSettingsExtensions.SetBinaryLogger<T>(this T settings, Nuke.Common.IO.PathConstruction.AbsolutePath path, Rocket.Surgery.Nuke.MSBuildBinaryLogImports imports) -> T
static Rocket.Surgery.Nuke.ToolSettingsExtensions.SetDefaultLoggers<T>(this T settings, Nuke.Common.IO.PathConstruction.AbsolutePath path) -> T
static Rocket.Surgery.Nuke.ToolSettingsExtensions.SetFileLogger<T>(this T settings, Nuke.Common.IO.PathConstruction.AbsolutePath path) -> T
static Rocket.Surgery.Nuke.ToolSettingsExtensions.SetGitVersionEnvironment<T>(this T settings, Nuke.Common.Tools.GitVersion.GitVersion gitVersion) -> T
static Rocket.Surgery.Nuke.ToolSettingsExtensions.With<T>(this Nuke.Common.ITargetDefinition target, System.Func<Nuke.Common.ITargetDefinition, T, Nuke.Common.ITargetDefinition> func, T value) -> Nuke.Common.ITargetDefinition
static Rocket.Surgery.Nuke.ToolSettingsExtensions.With<T>(this Nuke.Common.ITargetDefinition target, T value, System.Func<Nuke.Common.ITargetDefinition, T, Nuke.Common.ITargetDefinition> func) -> Nuke.Common.ITargetDefinition
static Temp.CleanupCode.CleanupCodeMSBuildToolset._12_0 -> Temp.CleanupCode.CleanupCodeMSBuildToolset
static Temp.CleanupCode.CleanupCodeMSBuildToolset._14_0 -> Temp.CleanupCode.CleanupCodeMSBuildToolset
static Temp.CleanupCode.CleanupCodeMSBuildToolset._15_0 -> Temp.CleanupCode.CleanupCodeMSBuildToolset
static Temp.CleanupCode.CleanupCodeMSBuildToolset.explicit operator Temp.CleanupCode.CleanupCodeMSBuildToolset(string value) -> Temp.CleanupCode.CleanupCodeMSBuildToolset
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddDisableSettingsLayers(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<Temp.CleanupCode.CleanupCodeSettingsLayers> disableSettingsLayers) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddDisableSettingsLayers(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params Temp.CleanupCode.CleanupCodeSettingsLayers[] disableSettingsLayers) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddExclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> exclude) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddExclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] exclude) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddExtensions(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> extensions) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddExtensions(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] extensions) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddInclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> include) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddInclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] include) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.AddProperty(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string propertyKey, string propertyValue) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ClearDisableSettingsLayers(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ClearExclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ClearExtensions(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ClearInclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ClearProperties(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.DisableNoBuiltinSettings(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.EnableNoBuiltinSettings(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveDisableSettingsLayers(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<Temp.CleanupCode.CleanupCodeSettingsLayers> disableSettingsLayers) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveDisableSettingsLayers(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params Temp.CleanupCode.CleanupCodeSettingsLayers[] disableSettingsLayers) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveExclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> exclude) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveExclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] exclude) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveExtensions(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> extensions) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveExtensions(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] extensions) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveInclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> include) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveInclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] include) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.RemoveProperty(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string propertyKey) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ResetCachesHome(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ResetDotNetPath(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ResetMonoPath(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ResetNoBuiltinSettings(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ResetProfile(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ResetProject(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ResetTargetPath(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ResetToolset(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetCachesHome(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string cachesHome) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetDisableSettingsLayers(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<Temp.CleanupCode.CleanupCodeSettingsLayers> disableSettingsLayers) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetDisableSettingsLayers(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params Temp.CleanupCode.CleanupCodeSettingsLayers[] disableSettingsLayers) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetDotNetPath(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string dotNetPath) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetExclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> exclude) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetExclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] exclude) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetExtensions(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> extensions) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetExtensions(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] extensions) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetInclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IEnumerable<string> include) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetInclude(this Temp.CleanupCode.CleanupCodeSettings toolSettings, params string[] include) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetMonoPath(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string monoPath) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetNoBuiltinSettings(this Temp.CleanupCode.CleanupCodeSettings toolSettings, bool? noBuiltinSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetProfile(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string profile) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetProject(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string project) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetProperties(this Temp.CleanupCode.CleanupCodeSettings toolSettings, System.Collections.Generic.IDictionary<string, string> properties) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetProperty(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string propertyKey, string propertyValue) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetTargetPath(this Temp.CleanupCode.CleanupCodeSettings toolSettings, string targetPath) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.SetToolset(this Temp.CleanupCode.CleanupCodeSettings toolSettings, Temp.CleanupCode.CleanupCodeMSBuildToolset toolset) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsExtensions.ToggleNoBuiltinSettings(this Temp.CleanupCode.CleanupCodeSettings toolSettings) -> Temp.CleanupCode.CleanupCodeSettings
static Temp.CleanupCode.CleanupCodeSettingsLayers.GlobalAll -> Temp.CleanupCode.CleanupCodeSettingsLayers
static Temp.CleanupCode.CleanupCodeSettingsLayers.GlobalPerProduct -> Temp.CleanupCode.CleanupCodeSettingsLayers
static Temp.CleanupCode.CleanupCodeSettingsLayers.SolutionPersonal -> Temp.CleanupCode.CleanupCodeSettingsLayers
static Temp.CleanupCode.CleanupCodeSettingsLayers.SolutionShared -> Temp.CleanupCode.CleanupCodeSettingsLayers
static Temp.CleanupCode.CleanupCodeSettingsLayers.explicit operator Temp.CleanupCode.CleanupCodeSettingsLayers(string value) -> Temp.CleanupCode.CleanupCodeSettingsLayers
static Temp.CleanupCode.CleanupCodeTasks.CleanupCode(Nuke.Common.Tooling.CombinatorialConfigure<Temp.CleanupCode.CleanupCodeSettings> configurator, int degreeOfParallelism = 1, bool completeOnFailure = false) -> System.Collections.Generic.IEnumerable<(Temp.CleanupCode.CleanupCodeSettings Settings, System.Collections.Generic.IReadOnlyCollection<Nuke.Common.Tooling.Output> Output)>
static Temp.CleanupCode.CleanupCodeTasks.CleanupCode(Nuke.Common.Tooling.Configure<Temp.CleanupCode.CleanupCodeSettings> configurator) -> System.Collections.Generic.IReadOnlyCollection<Nuke.Common.Tooling.Output>
static Temp.CleanupCode.CleanupCodeTasks.CleanupCode(Temp.CleanupCode.CleanupCodeSettings toolSettings = null) -> System.Collections.Generic.IReadOnlyCollection<Nuke.Common.Tooling.Output>
static Temp.CleanupCode.CleanupCodeTasks.CleanupCode(string arguments, string workingDirectory = null, System.Collections.Generic.IReadOnlyDictionary<string, string> environmentVariables = null, int? timeout = null, bool? logOutput = null, bool? logInvocation = null, System.Func<string, string> outputFilter = null) -> System.Collections.Generic.IReadOnlyCollection<Nuke.Common.Tooling.Output>
static Temp.CleanupCode.CleanupCodeTasks.CleanupCodeLogger.get -> System.Action<Nuke.Common.Tooling.OutputType, string>
static Temp.CleanupCode.CleanupCodeTasks.CleanupCodeLogger.set -> void
static Temp.CleanupCode.CleanupCodeTasks.CleanupCodePath.get -> string
virtual Temp.CleanupCode.CleanupCodeSettings.CachesHome.get -> string
virtual Temp.CleanupCode.CleanupCodeSettings.DisableSettingsLayers.get -> System.Collections.Generic.IReadOnlyList<Temp.CleanupCode.CleanupCodeSettingsLayers>
virtual Temp.CleanupCode.CleanupCodeSettings.DotNetPath.get -> string
virtual Temp.CleanupCode.CleanupCodeSettings.Exclude.get -> System.Collections.Generic.IReadOnlyList<string>
virtual Temp.CleanupCode.CleanupCodeSettings.Extensions.get -> System.Collections.Generic.IReadOnlyList<string>
virtual Temp.CleanupCode.CleanupCodeSettings.Include.get -> System.Collections.Generic.IReadOnlyList<string>
virtual Temp.CleanupCode.CleanupCodeSettings.MonoPath.get -> string
virtual Temp.CleanupCode.CleanupCodeSettings.NoBuiltinSettings.get -> bool?
virtual Temp.CleanupCode.CleanupCodeSettings.Profile.get -> string
virtual Temp.CleanupCode.CleanupCodeSettings.Project.get -> string
virtual Temp.CleanupCode.CleanupCodeSettings.Properties.get -> System.Collections.Generic.IReadOnlyDictionary<string, string>
virtual Temp.CleanupCode.CleanupCodeSettings.TargetPath.get -> string
virtual Temp.CleanupCode.CleanupCodeSettings.Toolset.get -> Temp.CleanupCode.CleanupCodeMSBuildToolset