resources:
  containers: []
  repositories:
  - repository: rsg
    name: RocketSurgeonsGuild/AzureDevopsTemplates
    type: GitHub
    ref: refs/tags/v0.10.12
    endpoint: github
variables:
- name: 'CONFIGURATION'
  value: 'Release'
- name: 'VERBOSITY'
  value: 'Normal'
- name: 'COVERAGE'
  value: '$(Agent.BuildDirectory)/c'
- name: 'ARTIFACTS'
  value: '$(Build.ArtifactStagingDirectory)'
- name: 'DOTNET_SKIP_FIRST_TIME_EXPERIENCE'
  value: 'true'
- name: 'CodeCovToken'
  value: 'c93f6719-da50-4d00-ba2b-b73fd95239e0'
trigger:
  batch: true
  branches:
    include:
    - master
    - refs/tags/*
    exclude: []
  paths:
    include: []
    exclude:
    - '**/*.md'
    - .appveyor.yml
    - .codecov.yml
    - GitVersion.yml
    - GitReleaseManager.yaml
    - .vscode/*
    - .git*
    - .editorconfig
    - .nuke
    - LICENSE
pr:
  autoCancel: true
  branches:
    include:
    - master
    exclude: []
stages:
- stage: macOS
  jobs:
  - job: BuildVersion
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: BuildVersion --skip
      displayName: BuildVersion
  - job: Clean
    dependsOn:
    - BuildVersion
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Clean --skip
      displayName: Clean
  - job: Restore
    dependsOn:
    - Clean
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: DotnetToolRestore Restore --skip
      displayName: Restore
  - job: Build
    dependsOn:
    - Restore
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Build --skip
      displayName: Build
  - job: Test
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Test Generate_Code_Coverage_Reports --skip
      displayName: Test
  - job: Pack
    dependsOn:
    - Build
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Pack --skip
      displayName: Pack
- stage: Ubuntu
  jobs:
  - job: BuildVersion
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: BuildVersion --skip
      displayName: BuildVersion
  - job: Clean
    dependsOn:
    - BuildVersion
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Clean --skip
      displayName: Clean
  - job: Restore
    dependsOn:
    - Clean
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: DotnetToolRestore Restore --skip
      displayName: Restore
  - job: Build
    dependsOn:
    - Restore
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Build --skip
      displayName: Build
  - job: Test
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Test Generate_Code_Coverage_Reports --skip
      displayName: Test
  - job: Pack
    dependsOn:
    - Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Pack --skip
      displayName: Pack
- stage: Windows
  jobs:
  - job: BuildVersion
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: BuildVersion --skip
      displayName: BuildVersion
  - job: Clean
    dependsOn:
    - BuildVersion
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Clean --skip
      displayName: Clean
  - job: Restore
    dependsOn:
    - Clean
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: DotnetToolRestore Restore --skip
      displayName: Restore
  - job: Build
    dependsOn:
    - Restore
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Build --skip
      displayName: Build
  - job: Test
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Test Generate_Code_Coverage_Reports --skip
      displayName: Test
  - job: Pack
    dependsOn:
    - Build
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PowerShell@2
      inputs:
        targetType: FilePath
        arguments: Pack --skip
      displayName: Pack
