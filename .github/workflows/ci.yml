# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActionsSteps (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_ci --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: ci

on:
  push:
    branches:
      - master
      - du-fuk
    tags:
      - v*
  pull_request:
    branches:
      - master
      - du-fuk

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          clean: 'false'
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: 🔨 Use .NET Core 2.1 SDK
        uses: david-driscoll/setup-dotnet@sxs-with-fallback
        with:
          dotnet-version: '2.1.805'
      - name: 🔨 Use .NET Core 3.1 SDK
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        uses: david-driscoll/setup-dotnet@sxs-with-fallback
        with:
          dotnet-version: '3.1.201'
      - name: 📲 Install GitVersion
        uses: david-driscoll/gittools-actions/gitversion/setup@feature/export-environment-github
        with:
          versionSpec: '5.1.x'
      - name: 🔨 Use GitVersion
        id: gitversion
        uses: david-driscoll/gittools-actions/gitversion/execute@feature/export-environment-github
      - name: 🎁 dotnet tool restore
        run: dotnet tool restore
      - name: 🎁 Restore
        run: dotnet nuke BuildVersion Clean Restore --skip
      - name: ⚙ Build
        run: dotnet nuke Build --skip
      - name: 🚦 Test
        run: dotnet nuke Generate_Code_Coverage_Reports Test --skip
      - name: 📦 Pack
        run: dotnet nuke Pack --skip
      - name: 🐿 Publish Coverage
        uses: codecov/codecov-action@v1
        with:
          name: 'actions-${{ matrix.os }}'
          fail_ci_if_error: 'true'
      - name: 🏺 Publish logs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: 'logs'
          path: 'artifacts/logs/'
      - name: 🏺 Publish coverage data
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: 'coverage'
          path: 'coverage/'
      - name: 🏺 Publish test data
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: 'coverage'
          path: 'artifacts/test/'
      - name: 🏺 Publish NuGet Packages
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: 'nuget'
          path: 'artifacts/nuget/'
