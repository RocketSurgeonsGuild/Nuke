# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActionsSteps (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_ci --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: ci

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      THIS_IS_A_SECRET:
        required: False
      RSG_NUGET_API_KEY:
        required: False
      RSG_AZURE_DEVOPS:
        required: False
      CODECOV_TOKEN:
        description: 'The codecov token'
        required: False
  push:
    branches:
      - 'master'
      - 'main'
      - 'next'
    tags:
      - 'v*'
    paths-ignore:
      - '.codecov.yml'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '.lintstagedrc.js'
      - '.prettierignore'
      - '.prettierrc'
      - 'LICENSE'
      - 'nukeeper.settings.json'
      - 'omnisharp.json'
      - 'package-lock.json'
      - 'package.json'
      - 'Readme.md'
      - '.github/dependabot.yml'
      - '.github/labels.yml'
      - '.github/release.yml'
      - '.github/renovate.json'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'next'
    paths-ignore:
      - '.codecov.yml'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '.lintstagedrc.js'
      - '.prettierignore'
      - '.prettierrc'
      - 'LICENSE'
      - 'nukeeper.settings.json'
      - 'omnisharp.json'
      - 'package-lock.json'
      - 'package.json'
      - 'Readme.md'
      - '.github/dependabot.yml'
      - '.github/labels.yml'
      - '.github/release.yml'
      - '.github/renovate.json'
permissions:
  actions: read
  checks: read
  contents: read
  deployments: read
  id-token: none
  issues: write
  discussions: none
  packages: none
  pages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: write

jobs:
  build:
    env:
      NUGET_PACKAGES: '${{ github.workspace }}/.nuget/packages'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@43045ae669be728bd34ed56fcd1a230c0dc4d8e2
        with:
          clean: 'false'
          fetch-depth: '0'
      - name: NuGet Cache
        uses: actions/cache@v4
        with:
          path: '${{ github.workspace }}/.nuget/packages'
          key: "${{ runner.os }}-nuget-${{ hashFiles('**/Directory.Packages.props') }}-${{ hashFiles('**/Directory.Packages.support.props') }}"
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: üî® Use .NET Core 6.0 SDK
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: '6.0.x'
      - name: üî® Use .NET Core 8.0 SDK
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: '8.0.x'
      - name: üéÅ dotnet tool restore
        run: |
          dotnet tool restore
      - name: üéÅ Restore
        id: restore
        run: |
          dotnet nuke Restore --skip --thisisaothervariable '${{ vars.THIS_IS_A_VARIABLE }}' --thisisanothervariable '${{ vars.THIS_IS_ANOTHER_VARIABLE }}' --this_is_a_variable '${{ vars.THIS_IS_A_VARIABLE }}' --thisisaenv '${{ env.THIS_IS_A_ENV || 'test' }}' --thisisasecret '${{ secrets.THIS_IS_A_SECRET }}' --githubtoken '${{ secrets.GITHUB_TOKEN }}'
      - name: ‚öô Build
        id: build
        run: |
          dotnet nuke Build --skip --thisisaothervariable '${{ vars.THIS_IS_A_VARIABLE }}' --thisisanothervariable '${{ vars.THIS_IS_ANOTHER_VARIABLE }}' --this_is_a_variable '${{ vars.THIS_IS_A_VARIABLE }}' --thisisaenv '${{ env.THIS_IS_A_ENV || 'test' }}' --thisisasecret '${{ secrets.THIS_IS_A_SECRET }}' --githubtoken '${{ secrets.GITHUB_TOKEN }}'
      - name: üö¶ Test
        id: test
        run: |
          dotnet nuke Test TriggerCodeCoverageReports GenerateCodeCoverageReportCobertura GenerateCodeCoverageBadges GenerateCodeCoverageSummary GenerateCodeCoverageReport --skip --thisisaothervariable '${{ vars.THIS_IS_A_VARIABLE }}' --thisisanothervariable '${{ vars.THIS_IS_ANOTHER_VARIABLE }}' --this_is_a_variable '${{ vars.THIS_IS_A_VARIABLE }}' --thisisaenv '${{ env.THIS_IS_A_ENV || 'test' }}' --thisisasecret '${{ secrets.THIS_IS_A_SECRET }}' --githubtoken '${{ secrets.GITHUB_TOKEN }}'
      - name: üì¶ Pack
        id: pack
        run: |
          dotnet nuke Pack --skip --thisisaothervariable '${{ vars.THIS_IS_A_VARIABLE }}' --thisisanothervariable '${{ vars.THIS_IS_ANOTHER_VARIABLE }}' --this_is_a_variable '${{ vars.THIS_IS_A_VARIABLE }}' --thisisaenv '${{ env.THIS_IS_A_ENV || 'test' }}' --thisisasecret '${{ secrets.THIS_IS_A_SECRET }}' --githubtoken '${{ secrets.GITHUB_TOKEN }}'
      - name: üè∫ Publish coverage data
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'coverage'
          path: 'coverage/'
      - name: üêø Publish Coverage
        if: (github.event_name != 'pull_request' && github.event_name != 'pull_request_target') || ((github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && github.event.pull_request.user.login != 'renovate[bot]' && github.event.pull_request.user.login != 'dependabot[bot]')
        uses: codecov/codecov-action@v4
        with:
          name: 'actions-${{ matrix.os }}'
          token: '${{ secrets.CODECOV_TOKEN }}'
      - name: üè∫ Publish logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'logs'
          path: 'artifacts/logs/'
      - name: üè∫ Publish test data
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'test data'
          path: 'artifacts/test/'
      - name: üè∫ Publish NuGet Packages
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'nuget'
          path: 'artifacts/nuget/'
  Publish:
    needs:
      - Build
    uses: RocketSurgeonsGuild/actions/.github/workflows/publish-nuget.yml@v0.3.8
    secrets:
      RSG_NUGET_API_KEY: '${{ secrets.RSG_NUGET_API_KEY }}'
      RSG_AZURE_DEVOPS: '${{ secrets.RSG_AZURE_DEVOPS }}'
